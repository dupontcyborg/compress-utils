name: Build and Package Python Wheels

on:
  push:
    branches: ["main"]
    tags: 
      - "v*"
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU (Linux ARM64)
        if: matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Copy Python Bindings Configuration
        run: cp bindings/python/pyproject.toml . && cp bindings/python/setup.py .
  
      - name: Build Python Wheels
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ARCHS_LINUX: "x86_64" # TODO - change this to "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "arm64" # TODO - change this to Universal2
          CIBW_ARCHS_WINDOWS: "AMD64" # TODO - change this to "ARM64 ARM64"
        run: cibuildwheel --output-dir wheelhouse

      - name: Build Source Distribution (sdist)
        if: matrix.os == 'ubuntu-latest'
        run: python setup.py sdist --dist-dir wheelhouse

      - name: Upload Wheels as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-wheels-${{ matrix.os == 'ubuntu-latest' && 'manylinux' || matrix.os }}
          path: wheelhouse/*.whl
          retention-days: 5

  publish_to_pypi:
    needs: build_wheels
    runs-on: ubuntu-latest
    # if: github.ref_type == 'tag' # TODO - revert this before merge

    steps:
      - name: Download Wheels Artifact
        uses: actions/download-artifact@v4
        with:
          name: python-wheels-ubuntu-latest
          path: wheelhouse

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Twine
        run: pip install twine

      - name: Publish to Test PyPI # TODO - change this to PyPI
        run: twine upload --repository https://test.pypi.org/legacy/ --skip-existing wheelhouse/*
