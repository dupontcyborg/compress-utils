name: Build and Package Python Wheels

on:
  push:
    branches: ["main"]
    tags: 
      - "v*"
  pull_request:
    types: [opened, synchronize]
    branches: ["main"]
  workflow_dispatch:

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest] # TODO - revert this
        python-version: ["cp36", "cp37", "cp38", "cp39", "cp310", "cp311", "cp312", "cp313"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install cibuildwheel and build
        run: pip install cibuildwheel build

      - name: Copy Python Bindings Configuration
        run: cp bindings/python/pyproject.toml . && cp bindings/python/setup.py .
  
      - name: Build Python Wheels
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: "${{ matrix.python-version }}-*"
          CIBW_ARCHS_LINUX: "x86_64" # TODO - change this to "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "arm64" # TODO - change this to Universal2
          CIBW_ARCHS_WINDOWS: "AMD64" # TODO - change this to "AMD64 ARM64"
        run: cibuildwheel --output-dir wheelhouse

      - name: Build Source Distribution (sdist)
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == 'cp310'
        run: python -m build --sdist --outdir wheelhouse

      - name: Upload Wheels as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: wheelhouse/*.whl
          
      - name: Upload Source Distribution as GitHub Artifact
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == 'cp310'
        uses: actions/upload-artifact@v4
        with:
          name: python-sdist
          path: wheelhouse/*.tar.gz
          retention-days: 5

  publish_to_pypi:
    needs: build_wheels
    runs-on: ubuntu-latest
    # if: github.ref_type == 'tag' # TODO - revert this before merge
    permissions:
      id-token: write  # Required for trusted publishing
      contents: read   # Required for actions/checkout
    
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          
      - name: Prepare for Upload
        run: |
          mkdir -p wheelhouse
          find dist -type f -name "*.whl" -exec cp {} wheelhouse/ \;
          find dist -type f -name "*.tar.gz" -exec cp {} wheelhouse/ \; || echo "No source distribution found"
          ls -la wheelhouse/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: wheelhouse/
          repository-url: https://test.pypi.org/legacy/  # TODO = Remove for production PyPI
          skip-existing: true